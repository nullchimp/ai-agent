################################################################
#  Memgraph - all-in-one manifest
#  ▸ Auth enabled (via MG_USERNAME / MG_PASSWORD)
#  ▸ Empty passwords explicitly disallowed
#  ▸ Log level set to INFO (TRACE is too noisy for prod)
################################################################

###############################################################
#  ConfigMap – runtime flags
###############################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: memgraph-config
data:
  MG_LOG_LEVEL: "INFO"            # change to DEBUG/TRACE only when troubleshooting
---
###############################################################
#  Deployment
###############################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memgraph
spec:
  replicas: 1
  selector:
    matchLabels: { app: memgraph }
  template:
    metadata:
      labels: { app: memgraph }
      annotations:
        # forces rolling restart when credentials change
        credentials-hash: "${CREDENTIALS_HASH}"
    spec:
      # ── pod security context for mounted volumes ─────
      securityContext:
        fsGroup: 1000                       # proper perms for mounted volumes

      # schedule on B2ms nodes if available
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - { key: beta.kubernetes.io/instance-type, operator: In, values: [ Standard_B2ms ] }

      tolerations:
      - { key: "node.kubernetes.io/memory-pressure", operator: "Exists", effect: "NoSchedule" }

      containers:
      - name: memgraph
        image: memgraph/memgraph-mage:latest
        args: [
          "--log-level=INFO", 
          "--also-log-to-stderr",
          "--memory-limit=1024",
          "--query-execution-timeout-sec=60",
          "--bolt-server-auth-enabled=true",
          "--auth-module-files=auth",
          "--auth-password-permit-empty=false"
        ]

        ports:
        - { name: bolt, containerPort: 7687 }
        - { name: http, containerPort: 7444 }
        - { name: ui, containerPort: 3000 }

        # ── authentication ────────────────────────────────────
        env:
        # Memgraph recognises these and enables auth automatically
        - name: MG_USERNAME
          valueFrom: { secretKeyRef: { name: memgraph-credentials, key: username } }
        - name: MG_PASSWORD
          valueFrom: { secretKeyRef: { name: memgraph-credentials, key: password } }

        # Ensure authentication is required and strictly enforced
        - { name: MG_ALLOW_EMPTY_PASSWORD, value: "false" }
        - { name: MG_REQUIRE_AUTHENTICATION, value: "true" }
        - { name: MG_AUTH_MODULE_ENABLED, value: "true" }
        # Configure Memgraph to work with default system limits
        - { name: MG_DURABILITY, value: "true" }

        # Load any future flags from the ConfigMap
        envFrom:
        - { configMapRef: { name: memgraph-config } }

        # persistent storage
        volumeMounts:
        - { name: data, mountPath: /data }
        - { name: logs, mountPath: /var/log/memgraph }

        resources:
          requests: { cpu: "500m", memory: "1Gi" }
          limits:   { cpu: "1000m", memory: "2Gi" }

        livenessProbe:
          tcpSocket: { port: 7687 }
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5

        readinessProbe:
          tcpSocket: { port: 7687 }
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3

      volumes:
      - { name: data, persistentVolumeClaim: { claimName: memgraph-data } }
      - { name: logs, persistentVolumeClaim: { claimName: memgraph-logs } }
---
###############################################################
#  Persistent Volume Claims – Standard HDD (change if needed)
###############################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memgraph-data
spec:
  storageClassName: disk-ssd
  accessModes: [ ReadWriteOnce ]
  resources: { requests: { storage: 10Gi } }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memgraph-logs
spec:
  storageClassName: disk-ssd
  accessModes: [ ReadWriteOnce ]
  resources: { requests: { storage: 5Gi } }
---
###############################################################
#  Service – public LoadBalancer
###############################################################
apiVersion: v1
kind: Service
metadata:
  name: memgraph
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: "memgraph-aiagent-${ENVIRONMENT}"
spec:
  selector: { app: memgraph }
  type: LoadBalancer
  ports:
  - { name: bolt, port: 7687, targetPort: 7687, protocol: TCP }
  - { name: http, port: 7444, targetPort: 7444, protocol: TCP }
  - { name: ui,   port: 3000, targetPort: 3000, protocol: TCP }

