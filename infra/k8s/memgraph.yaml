apiVersion: v1
kind: ConfigMap
metadata:
  name: memgraph-config
data:
  MG_LOG_LEVEL: "TRACE"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: memgraph
spec:
  replicas: 1
  selector:
    matchLabels:
      app: memgraph
  template:
    metadata:
      labels:
        app: memgraph
      annotations:
        # This annotation will be updated whenever we want to force a pod restart
        credentials-hash: "${CREDENTIALS_HASH}"
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox:1.28
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      # Add node affinity to schedule on nodes with sufficient resources
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: beta.kubernetes.io/instance-type
                operator: In
                values:
                - Standard_D4_v2
      tolerations:
      - key: "node.kubernetes.io/memory-pressure"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: memgraph
        image: memgraph/memgraph-mage:latest
        args: ["--log-level=TRACE", "--also-log-to-stderr"]
        ports:
        - containerPort: 7687  # Bolt protocol
        - containerPort: 7444  # HTTP API
        - containerPort: 3000  # MemGraph Lab UI
        env:
        - name: MEMGRAPH_USERNAME            # aligns with test script
          valueFrom:
            secretKeyRef:
              name: memgraph-credentials
              key: username
        - name: MEMGRAPH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memgraph-credentials
              key: password
        - name: MG_USERNAME                  # Memgraph native vars
          valueFrom:
            secretKeyRef:
              name: memgraph-credentials
              key: username
        - name: MG_PASSWORD
          valueFrom:
            secretKeyRef:
              name: memgraph-credentials
              key: password
        envFrom:                             # auto-load future config vars
        - configMapRef:
            name: memgraph-config
        volumeMounts:
        - name: data
          mountPath: /data
        - name: logs
          mountPath: /var/log/memgraph
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:                       # simpler, always available
          tcpSocket:
            port: 7687
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 7687
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: memgraph-data
      - name: logs
        persistentVolumeClaim:
          claimName: memgraph-logs
      - name: config                         # mount ConfigMap instead of PVC
        configMap:
          name: memgraph-config
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memgraph-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: memgraph-logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: memgraph
  annotations:
    service.beta.kubernetes.io/azure-dns-label-name: "memgraph-aiagent-${ENVIRONMENT}"
spec:
  selector:
    app: memgraph
  ports:
  - name: bolt
    port: 7687
    targetPort: 7687
  - name: http
    port: 7444
    targetPort: 7444
  - name: ui
    port: 3000
    targetPort: 3000
  type: LoadBalancer
