name: AI Issue Refinement

on:
  issue_comment:
    types: [created]

jobs:
  refine-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    
    steps:
      - name: Check if comment contains thumbs up and is from issue creator
        id: check-thumbs-up
        uses: actions/github-script@v7
        with:
          script: |
            const commenterLogin = context.payload.comment.user.login;
            const issueCreatorLogin = context.payload.issue.user.login;
            
            if (commenterLogin !== issueCreatorLogin) {
              console.log('Comment is not from the issue creator. Only the issue creator can trigger AI refinement. Skipping.');
              process.exit(0);
            }

            const comment = context.payload.comment.body.trim();
            if (!comment.toLowerCase().includes('#airefine')) {
              console.log('Comment does not trigger AI refinement. Skipping.');
              process.exit(0);
            }
      - name: Add eye emoji reaction
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              content: 'eyes'
            });
      - name: Refine issue with AI
        uses: actions/github-script@v7
        env:
          API_TOKEN: ${{ secrets.AI_TOKEN }}
        with:
          script: |
            const issueTitle = context.payload.issue.title;
            const issueBody = context.payload.issue.body || "";
            const issueNumber = context.payload.issue.number;
            const triggerComment = context.payload.comment.body.trim();
            
            const systemPrompt = `
                You are a helpful assistant that refines GitHub issues to make them more detailed and actionable. 
                Your task is to enhance the issue description while preserving the original intent.
                
                Please:
                1. Maintain the original title and core request
                2. Add relevant technical details and context
                3. Suggest acceptance criteria if appropriate
                4. Include potential implementation considerations
                5. Format the response in clear markdown
                6. Keep it concise but comprehensive
                7. Consider any additional context or feedback provided in the trigger comment
                
                Return only the refined issue body text without any meta-commentary.
            `;
            
            let userPrompt = `
                Please refine this GitHub issue:
                
                **Title:** ${issueTitle}
                
                **Original Description:**
                ${issueBody || "No description provided."}
            `;
            
            if (triggerComment !== '#airefine') {
                userPrompt += `
                    **Additional Context from Issue Creator:**
                    ${triggerComment}
                `;
            }
            
            userPrompt += `
                Please provide an enhanced version that would be more helpful for developers.
            `;
            
            console.log(`Calling GitHub Models API for issue #${issueNumber}`);
            
            try {
              // Call GitHub Models API using normal endpoint
              const response = await fetch('https://models.github.ai/inference/chat/completions', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${process.env.API_TOKEN}`,
                  'Accept': 'application/json',
                  'X-GitHub-Api-Version': '2022-11-28'
                },
                body: JSON.stringify({
                  model: 'openai/gpt-4.1',
                  temperature: 0.7,
                  top_p: 1.0,
                  messages: [
                    { role: 'system', content: systemPrompt },
                    { role: 'user', content: userPrompt }
                  ]
                })
              });
              
              if (response.ok) {
                const result = await response.json();
                const refinedContent = result.choices[0].message.content;
                
                // Add AI refinement note
                const aiNote = "\n\n---\n*✨ This issue has been enhanced by AI to provide more context and clarity.*";
                const finalBody = refinedContent + aiNote;
                
                // Update the issue
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: finalBody
                });
                
                console.log(`✅ Successfully refined issue #${issueNumber}`);
              } else {
                const errorText = await response.text();
                console.log(`❌ Failed to call GitHub Models: ${response.status}`);
                console.log(errorText);
                throw new Error(`GitHub Models API error: ${response.status}`);
              }
            } catch (error) {
              console.log(`❌ Error during AI refinement: ${error.message}`);
              throw error;
            }

      - name: Add completion reaction
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.reactions.createForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              content: 'rocket'
            });
